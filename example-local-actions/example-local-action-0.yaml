name: powermode-scan

on:
  pull_request:
    branches: 
      - release 
      - master
    types:
      -ready_for_review
      -review_requested

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  powermode-scan:
    runs-on: ubuntu-latest
    steps:
      # Checking out commit before used in generating diff file.
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: '${{ github.event.before }}'

      # Checking out commit after PR used in generating diff file.
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: '${{ github.event.after }}'

      # Used in speeding up runs in multiple pull requests.
      - name: Load Cached Scan Runs
        uses: actions/cache@v2
        with:
          path: pmd-cache
          key: pmd-cache-${{ runner.os }}-${{ github.event.after }}

      # diff-file.csv is generated using a git diff command when the differential-scan input is set to true.
      - name: Powermode Scan on Pull Request
        uses: ncino/powermode-scan@v1
        if: ${{ github.event_name == 'pull_request' }}
        with:
          pmd-version: '${{ secrets.PMD_VERSION }}'
          differential-scan: 'true'
          format: 'xml'
          cache: 'pmd-cache'
          failOnViolation: '${{ secrets.PMD_FAIL_ON_VIOLATION }}'
          reportfile: './report.xml'
          filelist: 'diff-file.csv'

      # This provides the option to scan the entire repo using the workflow dispatch button instead of a pull request.
      - name: Powermode Scan on Dispatch Request
        uses: ncino/powermode-scan@v1
        if: ${{ github.event_name != 'pull_request' }}
        with:
          pmd-version: '${{ secrets.PMD_VERSION }}'
          differential-scan: 'true'
          format: 'xml'
          cache: 'pmd-cache'
          failOnViolation: '${{ secrets.PMD_FAIL_ON_VIOLATION }}'
          reportfile: './report.xml'
          dir: '$GITHUB_WORKSPACE'

      # Archives the PMD Scan Results to make them available for download.
      - name: Archive PMD Scan Results
        uses: actions/upload-artifact@v2
        with:
          name: pmd-scan-results
          path: ./report.xml

      # Creates annotations on the action for easier review.
      - name: Annotate with PMD Results
        uses: jwgmeligmeyling/pmd-github-action@v1.2
        with: 
          name: PMD Scan Annotations
          path: ./report.xml
        
      # Posts a comment on the pull request
      - name: Comment on Pull Request
        if: ${{ github.event_name == 'pull_request' && steps.python-cache.outputs.cache-hit == 'false'}}
        shell: bash
        run: |
          curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ env.GITHUB_REPOSITORY }}/issues/${{ github.event.issue.number }}/comments \
          -d '{"body": "üêç Open the PMD Scan Annotations check details to view any PMD violations. üêç"}'
